colour="#ef652f",
linetype = "dashed",
size = 0.5) +
scale_y_continuous(labels = percent) +
labs(x="Number of voting centers with the same number of YES votes",
y = "Relative frequency",
title="Venezuela's Election Simulation",
subtitle="  Distribution of voting centers with the same number of votes for YES in both voting machines.",
caption="Results from 1,000 simulations.
Hypothesis: 8,394 voting centers, each with two voting machines. Each machine registers only two voting options, YES and NO. The probability of voting YES is 40%.") +
theme(plot.title=element_text(size=12, hjust=0),
plot.subtitle=element_text(size=8,hjust=0),
plot.caption= element_text(size=7),
axis.title.x=element_text(size=12,hjust=0.5),
axis.title.y=element_text(size=12,hjust=0.5)) +
annotate("text", x=216, y=0.05, label="Expected value = 216")
# Probability of getting the same amount of YES in both machines
exercise_b <- dbinom(0:500,500,0.4)^2
prob_b <- sum(exercise_b)
# Simulation
simulation <- rbinom(1000, 8394, prob_b)
simulation_2 <- simulation/8394
# Average number of voting centers with two machine with the same number of Yes
paste0("The avg. num. of voting centers with two machines with the same number of YES is ",
round(mean(simulation),2))
sd(simulation)
# # Plotting
# simulation_table  <- data.frame(simulation,simulation_2)
# simulation_table  <- rename(simulation_table,
#        number = simulation,
#        rate = simulation_2)
#
# ggplot(simulation_table, aes(x = number)) +
#   geom_histogram(aes(y = stat(density*width)),
#                      binwidth=1,
#                      color="white") +
#   geom_vline(aes(xintercept = 216),
#              colour="#ef652f",
#              linetype = "dashed",
#              size = 0.5) +
#   scale_y_continuous(labels = percent) +
#   labs(x="Number of voting centers with the same number of YES votes",
#        y = "Relative frequency",
#        title="Venezuela's Election Simulation",
#        subtitle="  Distribution of voting centers with the same number of votes for YES in both voting machines.",
#        caption="Results from 1,000 simulations.
#             Hypothesis: 8,394 voting centers, each with two voting machines. Each machine registers only two voting options, YES and NO. The probability of voting YES is 40%.") +
#   theme(plot.title=element_text(size=12, hjust=0),
#         plot.subtitle=element_text(size=8,hjust=0),
#         plot.caption= element_text(size=7),
#         axis.title.x=element_text(size=12,hjust=0.5),
#         axis.title.y=element_text(size=12,hjust=0.5)) +
#   annotate("text", x=216, y=0.05, label="Expected value = 216")
# Probability of getting the same amount of YES in both machines
exercise_b <- dbinom(0:500,500,0.4)^2
prob_b <- sum(exercise_b)
# Simulation
simulation <- rbinom(1000, 8394, prob_b)
simulation_2 <- simulation/8394
# Average number of voting centers with two machine with the same number of Yes
paste0("The avg. num. of voting centers with two machines with the same number of YES is ",
round(mean(simulation),2))
sd(simulation_2)
# # Plotting
# simulation_table  <- data.frame(simulation,simulation_2)
# simulation_table  <- rename(simulation_table,
#        number = simulation,
#        rate = simulation_2)
#
# ggplot(simulation_table, aes(x = number)) +
#   geom_histogram(aes(y = stat(density*width)),
#                      binwidth=1,
#                      color="white") +
#   geom_vline(aes(xintercept = 216),
#              colour="#ef652f",
#              linetype = "dashed",
#              size = 0.5) +
#   scale_y_continuous(labels = percent) +
#   labs(x="Number of voting centers with the same number of YES votes",
#        y = "Relative frequency",
#        title="Venezuela's Election Simulation",
#        subtitle="  Distribution of voting centers with the same number of votes for YES in both voting machines.",
#        caption="Results from 1,000 simulations.
#             Hypothesis: 8,394 voting centers, each with two voting machines. Each machine registers only two voting options, YES and NO. The probability of voting YES is 40%.") +
#   theme(plot.title=element_text(size=12, hjust=0),
#         plot.subtitle=element_text(size=8,hjust=0),
#         plot.caption= element_text(size=7),
#         axis.title.x=element_text(size=12,hjust=0.5),
#         axis.title.y=element_text(size=12,hjust=0.5)) +
#   annotate("text", x=216, y=0.05, label="Expected value = 216")
# Probability of getting the same amount of YES in both machines
exercise_b <- dbinom(0:500,500,0.4)^2
prob_b <- sum(exercise_b)
# Simulation
simulation <- rbinom(1000, 8394, prob_b)
simulation_2 <- simulation/8394
# Average number of voting centers with two machine with the same number of Yes
paste0("The avg. num. of voting centers with two machines with the same number of YES is ",
round(mean(simulation),2))
sd(simulation)
# # Plotting
# simulation_table  <- data.frame(simulation,simulation_2)
# simulation_table  <- rename(simulation_table,
#        number = simulation,
#        rate = simulation_2)
#
# ggplot(simulation_table, aes(x = number)) +
#   geom_histogram(aes(y = stat(density*width)),
#                      binwidth=1,
#                      color="white") +
#   geom_vline(aes(xintercept = 216),
#              colour="#ef652f",
#              linetype = "dashed",
#              size = 0.5) +
#   scale_y_continuous(labels = percent) +
#   labs(x="Number of voting centers with the same number of YES votes",
#        y = "Relative frequency",
#        title="Venezuela's Election Simulation",
#        subtitle="  Distribution of voting centers with the same number of votes for YES in both voting machines.",
#        caption="Results from 1,000 simulations.
#             Hypothesis: 8,394 voting centers, each with two voting machines. Each machine registers only two voting options, YES and NO. The probability of voting YES is 40%.") +
#   theme(plot.title=element_text(size=12, hjust=0),
#         plot.subtitle=element_text(size=8,hjust=0),
#         plot.caption= element_text(size=7),
#         axis.title.x=element_text(size=12,hjust=0.5),
#         axis.title.y=element_text(size=12,hjust=0.5)) +
#   annotate("text", x=216, y=0.05, label="Expected value = 216")
# Probability of getting the same amount of YES in both machines
exercise_b <- dbinom(0:500,500,0.4)^2
prob_b <- sum(exercise_b)
# Simulation
simulation <- rbinom(1000, 8394, prob_b)
simulation_2 <- simulation/8394
# Average number of voting centers with two machine with the same number of Yes
paste0("The avg. num. of voting centers with two machines with the same number of YES is ",
round(mean(simulation),2))
sd(simulation)
# Plotting
simulation_table  <- data.frame(simulation,simulation_2)
simulation_table  <- rename(simulation_table,
number = simulation,
rat    = simulation_2)
#
ggplot(lation_table, aes(x = number)) +
#
geom_ogram(aes(y = stat(density*width)),
#                    binwidth=1,
#
r="white") +
#
om_vline(aes(
exintpt = 216),
#
colo
"#ef652f",
# Probability of getting the same amount of YES in both machines
exercise_b <- dbinom(0:500,500,0.4)^2
prob_b <- sum(exercise_b)
# Simulation
simulation <- rbinom(1000, 8394, prob_b)
simulation_2 <- simulation/8394
# Average number of voting centers with two machine with the same number of Yes
paste0("The avg. num. of voting centers with two machines with the same number of YES is ",
round(mean(simulation),2))
# Plotting
simulation_table  <- data.frame(simulation,simulation_2)
simulation_table  <- rename(simulation_table,
number = simulation,
rate = simulation_2)
ggplot(simulation_table, aes(x = number)) +
geom_histogram(aes(y = stat(density*width)),
binwidth=1,
color="white") +
geom_vline(aes(xintercept = 216),
colour="#ef652f",
linetype = "dashed",
size = 0.5) +
scale_y_continuous(labels = percent) +
labs(x="Number of voting centers with the same number of YES votes",
y
elat= "Rfreqivency"ive
# Probability of getting the same amount of YES in both machines
exercise_b <- dbinom(0:500,500,0.4)^2
prob_b <- sum(exercise_b)
# Simulation
simulation <- rbinom(1000, 8394, prob_b)
simulation_2 <- simulation/8394
# Average number of voting centers with two machine with the same number of Yes
paste0("The avg. num. of voting centers with two machines with the same number of YES is ",
round(mean(simulation),2))
# Standard deviation of voting centers with two machine with the same number of Yes
paste0("The standard deviation of voting centers with two machines with the same number of YES is ",
round(sd(simulation),2))
# Plotting
simulation_table  <- data.frame(simulation,simulation_2)
simulation_table  <- rename(simulation_table,
number = simulation,
rate = simulation_2)
ggplot(simulation_table, aes(x = number)) +
geom_histogram(aes(y = stat(density*width)),
binwidth=1,
color="white") +
geom_vline(aes(xintercept = 216),
colour="#ef652f",
linetype = "dashed",
size = 0.5) +
scale_y_continuous(labels = percent) +
labs(x="Number of voting centers with the same number of YES votes",
y = "Relative frequency",
title="Venezuela's Election Simulation",
subtitle="  Distribution of voting centers with the same number of votes for YES in both voting machines.",
caption="Results from 1,000 simulations.
Hypothesis: 8,394 voting centers, each with two voting machines. Each machine registers only two voting options, YES and NO. The probability of voting YES is 40%.") +
theme(plot.title=element_text(size=12, hjust=0),
plot.subtitle=element_text(size=8,hjust=0),
plot.caption= element_text(size=7),
axis.title.x=element_text(size=12,hjust=0.5),
axis.title.y=element_text(size=12,hjust=0.5)) +
annotate("text", x=216, y=0.05, label="Expected value = 216")
# Probability of getting the same amount of YES in both machines
exercise_b <- dbinom(0:500,500,0.4)^2
prob_b <- sum(exercise_b)
# Simulation
simulation <- rbinom(1000, 8394, prob_b)
simulation_2 <- simulation/8394
# Average number of voting centers with two machine with the same number of Yes
paste0("The avg. num. of voting centers with two machines with the same number of YES is ",
round(mean(simulation),2))
round(sd(simulation),2)
# Standard deviation of voting centers with two machine with the same number of Yes
paste0("The standard deviation of voting centers with two machines with the same number of YES is ",
round(sd(simulation),2))
# Plotting
simulation_table  <- data.frame(simulation,simulation_2)
simulation_table  <- rename(simulation_table,
number = simulation,
rate = simulation_2)
ggplot(simulation_table, aes(x = number)) +
geom_histogram(aes(y = stat(density*width)),
binwidth=1,
color="white") +
geom_vline(aes(xintercept = 216),
colour="#ef652f",
linetype = "dashed",
size = 0.5) +
scale_y_continuous(labels = percent) +
labs(x="Number of voting centers with the same number of YES votes",
y = "Relative frequency",
title="Venezuela's Election Simulation",
subtitle="  Distribution of voting centers with the same number of votes for YES in both voting machines.",
caption="Results from 1,000 simulations.
Hypothesis: 8,394 voting centers, each with two voting machines. Each machine registers only two voting options, YES and NO. The probability of voting YES is 40%.") +
theme(plot.title=element_text(size=12, hjust=0),
plot.subtitle=element_text(size=8,hjust=0),
plot.caption= element_text(size=7),
axis.title.x=element_text(size=12,hjust=0.5),
axis.title.y=element_text(size=12,hjust=0.5)) +
annotate("text", x=216, y=0.05, label="Expected value = 216")
# Insert only code here.
library(haven)
lfs_cleaned <- read_dta("lfs_cleaned.dta")
#1+2/1+2+3
totalworkingage = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT!=4),"SAMPLE_WEIGHT"])
laborforceindividuals = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT < 3),"SAMPLE_WEIGHT"])
lfpr = laborforceindividuals/totalworkingage
lfpr
# Insert only code here.
#2/1+2
unemployed = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT==2),"SAMPLE_WEIGHT"])
unemploymentrate = unemployed/laborforceindividuals
unemploymentrate
# Insert only code here.
#2+3/1+2+3
nonemployed = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT==2|lfs_cleaned$LFS_STRICT==3),"SAMPLE_WEIGHT"])
nonemployedrate = nonemployed/totalworkingage
nonemployedrate
library(naniar)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(options(width = 60))
knitr::opts_chunk$set(class.output = "bg-warning")
packages <- c('haven','dplyr', 'ggplot2', 'reshape2', 'tidyverse', 'pracma',
'lubridate', 'scales', 'ggthemes', 'gt', 'dineq', 'gglorenz')
to_install <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(to_install)>0) install.packages(to_install)
lapply(packages, require, character.only=TRUE)
# Insert only code here.
library(dineq)
library(ineq)
lfs_cleaned<-lfs_cleaned %>%
mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH %in% c(999999,999997) ~ as.double(NA))) %>%
mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 00 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(haven)
lfs_cleaned <- read_dta("lfs_cleaned.dta")
#1+2/1+2+3
totalworkingage = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT!=4),"SAMPLE_WEIGHT"])
laborforceindividuals = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT < 3),"SAMPLE_WEIGHT"])
lfpr = laborforceindividuals/totalworkingage
lfpr
# Insert only code here.
#2/1+2
unemployed = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT==2),"SAMPLE_WEIGHT"])
unemploymentrate = unemployed/laborforceindividuals
unemploymentrate
# Insert only code here.
#2+3/1+2+3
nonemployed = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT==2|lfs_cleaned$LFS_STRICT==3),"SAMPLE_WEIGHT"])
nonemployedrate = nonemployed/totalworkingage
nonemployedrate
# Insert only code here.
library(dineq)
library(ineq)
lfs_cleaned<-lfs_cleaned %>%
mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH %in% c(999999,999997) ~ as.double(NA))) %>%
mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 00 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(dineq)
library(ineq)
lfs_cleaned<-lfs_cleaned %>%
mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH %in% c(999999,999997) ~ as.double(NA))) #%>%
#mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(dineq)
library(ineq)
lfs_cleaned<-lfs_cleaned #%>%
# mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH %in% c(999999,999997) ~ as.double(NA))) #%>%
#mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(dineq)
library(ineq)
lfs_cleaned<-lfs_cleaned #%>%
# mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH %in% c(999999,999997) ~ as.double(NA))) #%>%
#mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(dineq)
library(ineq)
# lfs_cleaned<-lfs_cleaned #%>%
#  # mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH %in% c(999999,999997) ~ as.double(NA))) #%>%
#   #mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
#2+3/1+2+3
nonemployed = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT==2|lfs_cleaned$LFS_STRICT==3),"SAMPLE_WEIGHT"])
nonemployedrate = nonemployed/totalworkingage
nonemployedrate
# Insert only code here.
library(dineq)
library(ineq)
# lfs_cleaned<-lfs_cleaned #%>%
#  # mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH %in% c(999999,999997) ~ as.double(NA))) #%>%
#   #mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
lfs_cleaned <- lfs_cleaned %>%
mutate(ethnicity = case_when(READ_AND_WRITE_1 %in% c(3,4,9,13,16,17,19,21,22,30,39,40,42) ~ "1"
,READ_AND_WRITE_1 %in% c(31) ~ "2"
,READ_AND_WRITE_1 %in% c(32,33,34,35,36,37) ~ "3"
,TRUE ~ "NA"
))
lfs_cleaned %>%
group_by(ethnicity) %>%
summarise(income = sum(GROSS_INCOME_MONTH*SAMPLE_WEIGHT/sum(SAMPLE_WEIGHT),na.rm = TRUE))
# Insert only code here.
library(dineq)
library(ineq)
# lfs_cleaned<-lfs_cleaned #%>%
#  # mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH %in% c(999999,999997) ~ as.double(NA))) #%>%
#   #mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(haven)
lfs_cleaned <- read_dta("lfs_cleaned.dta")
#1+2/1+2+3
totalworkingage = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT!=4),"SAMPLE_WEIGHT"])
laborforceindividuals = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT < 3),"SAMPLE_WEIGHT"])
lfpr = laborforceindividuals/totalworkingage
lfpr
# Insert only code here.
#2/1+2
unemployed = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT==2),"SAMPLE_WEIGHT"])
unemploymentrate = unemployed/laborforceindividuals
unemploymentrate
# Insert only code here.
#2+3/1+2+3
nonemployed = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT==2|lfs_cleaned$LFS_STRICT==3),"SAMPLE_WEIGHT"])
nonemployedrate = nonemployed/totalworkingage
nonemployedrate
# Insert only code here.
library(dineq)
library(ineq)
# lfs_cleaned<-lfs_cleaned #%>%
#  # mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH %in% c(999999,999997) ~ as.double(NA))) #%>%
#   #mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
gini_wtd
# Insert only code here.
library(dineq)
library(ineq)
lfs_cleaned<-lfs_cleaned %>%
mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH %in% c(999999,999997) ~ as.double(NA))) #%>%
#   #mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(dineq)
library(ineq)
lfs_cleaned$GROSS_INCOME_MONTH <- ifelse(lfs_cleaned$GROSS_INCOME_MONTH %in% c(999999,999997),NA,lfs_cleaned$GROSS_INCOME_MONTH
#   #mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(dineq)
library(ineq)
lfs_cleaned$GROSS_INCOME_MONTH <- ifelse(lfs_cleaned$GROSS_INCOME_MONTH %in% c(999999,999997),NA,lfs_cleaned$GROSS_INCOME_MONTH)
#   #mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(dineq)
library(ineq)
#lfs_cleaned$GROSS_INCOME_MONTH <- ifelse(lfs_cleaned$GROSS_INCOME_MONTH %in% c(999999,999997),NA,lfs_cleaned$GROSS_INCOME_MONTH)
#   #mutate(GROSS_INCOME_MONTH = case_when(GROSS_INCOME_MONTH == 0 & LFS_STRICT == 1 ~ as.double(NA)))
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(dineq)
library(ineq)
lfs_cleaned$GROSS_INCOME_MONTH <- ifelse(lfs_cleaned$GROSS_INCOME_MONTH %in% c(999999,999997),NA,lfs_cleaned$GROSS_INCOME_MONTH)
lfs_cleaned$GROSS_INCOME_MONTH <- ifelse(lfs_cleaned$GROSS_INCOME_MONTH == 0 & lfs_cleaned$LFS_STRICT == 1,NA,lfs_cleaned$GROSS_INCOME_MONTH)
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
# Insert only code here.
library(haven)
lfs_cleaned <- read_dta("lfs_cleaned.dta")
#1+2/1+2+3
totalworkingage = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT!=4),"SAMPLE_WEIGHT"])
laborforceindividuals = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT < 3),"SAMPLE_WEIGHT"])
lfpr = laborforceindividuals/totalworkingage
lfpr
# Insert only code here.
#2/1+2
unemployed = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT==2),"SAMPLE_WEIGHT"])
unemploymentrate = unemployed/laborforceindividuals
unemploymentrate
# Insert only code here.
#2+3/1+2+3
nonemployed = sum(lfs_cleaned[which(lfs_cleaned$LFS_STRICT==2|lfs_cleaned$LFS_STRICT==3),"SAMPLE_WEIGHT"])
nonemployedrate = nonemployed/totalworkingage
nonemployedrate
# Insert only code here.
library(dineq)
library(ineq)
lfs_cleaned$GROSS_INCOME_MONTH <- ifelse(lfs_cleaned$GROSS_INCOME_MONTH %in% c(999999,999997),NA,lfs_cleaned$GROSS_INCOME_MONTH)
lfs_cleaned$GROSS_INCOME_MONTH <- ifelse(lfs_cleaned$GROSS_INCOME_MONTH == 0 & lfs_cleaned$LFS_STRICT == 1,NA,lfs_cleaned$GROSS_INCOME_MONTH)
gini_wtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH, weights = lfs_cleaned$SAMPLE_WEIGHT)
gini_wtd
# Insert only code here.
gini_uwtd <- gini.wtd(x=lfs_cleaned$GROSS_INCOME_MONTH)
gini_uwtd
# Insert only code here.
Lc(lfs_cleaned$GROSS_INCOME_MONTH, plot = TRUE)
# Insert only code here.
lfs_cleaned <- lfs_cleaned %>%
mutate(ethnicity = case_when(READ_AND_WRITE_1 %in% c(3,4,9,13,16,17,19,21,22,30,39,40,42) ~ "1"
,READ_AND_WRITE_1 %in% c(31) ~ "2"
,READ_AND_WRITE_1 %in% c(32,33,34,35,36,37) ~ "3"
,TRUE ~ "NA"
))
lfs_cleaned %>%
group_by(ethnicity) %>%
summarise(income = sum(GROSS_INCOME_MONTH*SAMPLE_WEIGHT/sum(SAMPLE_WEIGHT),na.rm = TRUE))
# Insert only code here.
subset1 <- lfs_cleaned %>%
filter(ethnicity == "Africans")
gini_wtd_1 <- gini.wtd(x=subset1$GROSS_INCOME_MONTH, weights = subset1$SAMPLE_WEIGHT)
# Insert only code here.
subset1 <- lfs_cleaned %>%
filter(ethnicity == "Africans")
gini_wtd_1 <- gini.wtd(x=subset1$GROSS_INCOME_MONTH, weights = subset1$SAMPLE_WEIGHT)
# Insert only code here.
subset1 <- lfs_cleaned %>%
filter(ethnicity == "1")
gini_wtd_1 <- gini.wtd(x=subset1$GROSS_INCOME_MONTH, weights = subset1$SAMPLE_WEIGHT)
subset2 <- lfs_cleaned %>%
filter(ethnicity == "2")
gini_wtd_2 <- gini.wtd(x=subset2$GROSS_INCOME_MONTH, weights = subset2$SAMPLE_WEIGHT)
subset3 <- lfs_cleaned %>%
filter(ethnicity == "3")
gini_wtd_3 <- gini.wtd(x=subset3$GROSS_INCOME_MONTH, weights = subset3$SAMPLE_WEIGHT)
gini_wtd_1
gini_wtd_2
gini_wtd_3
# Insert only code here.
library(haven)
lfs_original <- read_dta("lfs_original.dta")
lfs_original <- lfs_original %>%
select(HOUSEHOLD_ID, I_LN, REGION, AGE_YEARS, SEX, HIGHEST_EDU_LEVEL, URBAN_RURAL, READ_AND_WRITE_1, LFS_STRICT, EMPLOYMENT_STATUS, EMPLOYER_TYPE, GROSS_INCOME_MONTH, REGISTERED_SOCIAL_SECURITY_YO,SAMPLE_WEIGHT) %>%
mutate(REGION_2 = case_when(REGION == 14 ~ "Zambezi",
REGION == 13 ~ "Otjozondjupa",
REGION == 12 ~ "Oshikoto",
REGION == 11 ~ "Oshana",
REGION == 10 ~ "Omusati",
REGION == 9 ~ "Omaheke",
REGION == 8 ~ "Ohangwena",
REGION == 7 ~ "Kunene",
REGION == 6 ~ "Khomas",
REGION == 5 ~ "Kavango West",
REGION == 4 ~ "Kavango East",
REGION == 3 ~ "Hardap",
REGION == 2 ~ "Erongo",
REGION == 1 ~ "!Karas"))%>%
filter(AGE_YEARS > 14 & AGE_YEARS < 65 & LFS_STRICT %in% c(1,2,3,4))
