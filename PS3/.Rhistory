mod3 <- lm(y ~ variable1 + variable2 + variable1:variable2)
summary(mod3)
screenreg(list(mod1,mod2,mod3))
y <- 4+3*variable1 + 2*variable2 + 0*variable1*variable2 + rnorm(n)
mod1 <- lm(y ~ variable1)
summary(mod1)
mod2 <- lm(y ~ variable1 + variable2)
summary(mod2)
mod3 <- lm(y ~ variable1 + variable2 + variable1:variable2)
summary(mod3)
screenreg(list(mod1,mod2,mod3))
y <- 4+rnorm(1,3,0.1)*variable1 + rnorm(1,2,0.1)*variable2 + 0*variable1*variable2 + rnorm(n)
mod1 <- lm(y ~ variable1)
summary(mod1)
mod2 <- lm(y ~ variable1 + variable2)
summary(mod2)
mod3 <- lm(y ~ variable1 + variable2 + variable1:variable2)
summary(mod3)
screenreg(list(mod1,mod2,mod3))
cor(variable1,variable2)
y <- 4+rnorm(1,3,0.1)*variable1 + rnorm(1,2,0.1)*variable2 + 0*variable1*variable2 + rnorm(n, mean = 0 , sd = 5)
mod1 <- lm(y ~ variable1)
summary(mod1)
mod2 <- lm(y ~ variable1 + variable2)
summary(mod2)
mod3 <- lm(y ~ variable1 + variable2 + variable1:variable2)
summary(mod3)
screenreg(list(mod1,mod2,mod3))
library(tidyverse)
pbinom(q = 311, size = 576, prob = 0.5)
pbinom(q = 311, size = 576, prob = 0.5, lower.tail = F)
p <- 0.5
adjust_holder <- 0
iter_holder <- 0
p <- 0.5
adjust_holder <- 0
p
p + adjust_holder/100
count_holder <- 0
iter_holder <- 0
p_start <- 0.5
adjust_holder <- 0
count_holder <- 0
p <- p_start + adjust_holder/100
p
count_holder
p
rbinom(n = 1, size = 1, prob = p)
iter_holder <- 0
p_start <- 0.5
adjust_holder <- 0
count_holder <- 0
p <- p_start + adjust_holder/100
if (p == 1 | p == 0) {
iter_holder <- count_holder
}
while( (p + adjust_holder/100 != 0) & (p + adjust_holder/100 != 0)){
count_holder <- count_holder + 1
adjust_holder <- rbinom(n = 1, size = 1, prob = p)*2-1
}
#
iter_holder <- 0
p_start <- 0.5
adjust_holder <- 0
count_holder <- 0
p <- p_start + adjust_holder/100
if (p == 1 | p == 0) {
iter_holder <- count_holder
}
while( (p + adjust_holder/100 != 0) & (p + adjust_holder/100 != 1)){
if(count_holder %% 10^4 == 0){
print(count_holder)
}
count_holder <- count_holder + 1
adjust_holder <- rbinom(n = 1, size = 1, prob = p)*2-1
}
iter_holder <- count_holder
p
p_start
adjust_holder/100
count_holder
iter_holder <- 0
p_start <- 0.5
adjust_holder <- 0
count_holder <- 0
p <- p_start + adjust_holder/100
if (p == 1 | p == 0) {
iter_holder <- count_holder
}
while( (p + adjust_holder/100 != 0) & (p + adjust_holder/100 != 1)){
if(count_holder %% 10^6 == 0){
print(count_holder/10^6)
}
count_holder <- count_holder + 1
adjust_holder <- adjust_holder + rbinom(n = 1, size = 1, prob = p)*2-1
}
iter_holder
count_holder
loop_ind <- 1
iter_holder <- 0
p_start <- 0.5
adjust_holder <- 0
count_holder <- 0
count_holder
p <- p_start + adjust_holder/100
p
adjust_holder
p_start <- 0.5
adjust_holder <- 0
count_holder <- 0
p <- p_start + adjust_holder/100
loop_ind <- 1
while(loop_ind == 1){
if(count_holder %% 10^6 == 0){
print(count_holder/10^6)
}
count_holder <- count_holder + 1
adjust_holder <- adjust_holder + rbinom(n = 1, size = 1, prob = p)*2-1
p <- p_start + adjust_holder/100
if(p == 1 | p == 0){
loop_ind <- 0
}
nsim <- 100
iter_holder <- rep(NA,nsim)
nsim <- 100
iter_holder <- rep(NA,nsim)
for (i in 1:nsim) {
p_start <- 0.5
adjust_holder <- 0
count_holder <- 0
p <- p_start + adjust_holder/100
loop_ind <- 1
while(loop_ind == 1){
if(count_holder %% 10^6 == 0){
print(count_holder/10^6)
}
count_holder <- count_holder + 1
adjust_holder <- adjust_holder + rbinom(n = 1, size = 1, prob = p)*2-1
p <- p_start + adjust_holder/100
if(p == 1 | p == 0){
loop_ind <- 0
}
iter_holder[i] <- count_holder
}
mean(iter_holder)
hist(iter_holder)
var(iter_holder)
summary(iter_holder)
nsim <- 1000
iter_holder <- rep(NA,nsim)
for (i in 1:nsim) {
p_start <- 0.5
adjust_holder <- 0
count_holder <- 0
p <- p_start + adjust_holder/100
loop_ind <- 1
while(loop_ind == 1){
count_holder <- count_holder + 1
adjust_holder <- adjust_holder + rbinom(n = 1, size = 1, prob = p)*2-1
p <- p_start + adjust_holder/100
if(p == 1 | p == 0){
loop_ind <- 0
}
iter_holder[i] <- count_holder
}
mean(iter_holder)
var(iter_holder)
summary(iter_holder)
hist(iter_holder)
install.packages("vars") #If not already installed
install.packages("astsa") #If not already installed
library(vars)
library(astsa)
x = cbind(cmort, tempr, part)
x
plot.ts(x , main = "", xlab = "")
fitvar1= VAR(x, p=1, type="both")
summary(fitvar1)
library(beepr)
beep(4)
library(beepr)
beep(4)
library(beepr)
beep(4)
beep(1)
beep(2)
beep(3)
beep(4)
beep(5)
beep(6)
beep(7)
beep(8)
beep(9)
beep(10)
beep(11)
?beepr
beep(10)
beep(11)
library(tidyverse)
log(25, base = 12)
log(31, base = 8)
log(31, base = 10)
log(25, base = 12)
log(25, base = 10)
log(31, base = 12)
getwd()
clearwd()
getwd()
rm(list=ls())
choose(20,2)
choose(20,2)*365*choose(364,18)
(choose(20,2)*365*choose(364,18))/(365^20)
(choose(20,2)*365*choose(364,18)*factorial(18))/(365^20)
1-pbirthday(n = 20)
pbirthday(n = 20)
(choose(20,3)*365*choose(364,17)*factorial(17))/(365^20)
(choose(20,2)*365*choose(364,18)*factorial(18))/(365^20)
my_bday <- function(n,k){
(choose(n,k)*365*choose(364,n-k)*factorial(n-k))/(365^k)
}
my_bday(n = 20, k = 2)
my_bday <- function(n,k){
(choose(n,k)*365*choose(364,n-k)*factorial(n-k))/(365^n)
}
my_bday(n = 20, k = 2)
my_bday(n = 21, k = 2)
my_bday(n = 22, k = 2)
my_bday(n = 23, k = 2)
?pbirthday
my_bday(n = 1, k = 2)
my_bday(n = 2, k = 2)
1/365
x <- 2:90
fun_birth <- pbirthday(n = x)
pbirthday(n = x)
my_bday(k = 2, n = x)
plot(my_bday(k = 2, n = x))
which(my_bday(k = 2, n = x)== my_bday(k = 2, n = x)))
which(my_bday(k = 2, n = x)== my_bday(k = 2, n = x))
which(my_bday(k = 2, n = x) == max(my_bday(k = 2, n = x)))
pbirthday(90)
pbirthday(27)
pbirthday(1)
pbirthday(2)
pbirthday(3)
i <- 3
pbirthday(i)
my_bday(i)
i <- 3
pbirthday(i)
my_bday(i, k = 2)
my_bday <- function(n,k = 2){
(choose(n,k)*365*choose(364,n-k)*factorial(n-k))/(365^n)
}
i <- 3
pbirthday(i)
my_bday(i)
i <- 3
pbirthday(i)-my_bday(i)
i <- 5
pbirthday(i)-my_bday(i)
i <- 10
pbirthday(i)-my_bday(i)
i <- 20
pbirthday(i)-my_bday(i)
i <- 20
pbirthday(i)-my_bday(i)
i <- 23
pbirthday(i)-my_bday(i)
i <- 40
pbirthday(i)-my_bday(i)
i <- 50
pbirthday(i)-my_bday(i)
i <- 70
pbirthday(i)-my_bday(i)
diff_holder <- c()
for (i in 2:90) {
diff_holder[i-1] <- pbirthday(i) - my_bday(i)
for (i in 2:90) {
diff_holder[i-1] <- pbirthday(i) - my_bday(i)
}
diff_holder <- c()
for (i in 2:90) {
diff_holder[i-1] <- pbirthday(i) - my_bday(i)
}
diff_holder
plot(diff_holder)
plot(diff_holder, type = "l")
diff_holder <- c()
for (i in 2:150) {
diff_holder[i-1] <- pbirthday(i) - my_bday(i)
}
plot(diff_holder, type = "l")
?install.packages
install.packages("scales", repos='http://cran.us.r-project.org', dependencies = T)
install.packages("farver", repos='http://cran.us.r-project.org', dependencies = T)
pt(q = 0, df = 5)
pt(q = 0, df = 3)
pt(q = -5, df = 3)
pt(q = -6, df = 3)
2*pt(q = -6, df = 3)
2*pt(q = -6, df = 30)
2*pt(q = -6, df = 3)
2*pt(q = -12, df = 4)
2*pt(q = -6, df = 3)
2*pnorm(-6)
2*pnorm(-3)
2*pnorm(-4.5)
2*pnorm(-5)
2*pnorm(-10)
df <- 4
df/(df-2)
2*pt(q = -6*sqrt(var_theor), df = df)
var_theor <- df/(df-2)
2*pt(q = -6*sqrt(var_theor), df = df)
sqrt(var_theor)
-6*sqrt(var_theor)
2*pt(q = -6*sqrt(var_theor), df = df)
df <- 5
var_theor <- df/(df-2)
2*pt(q = -6*sqrt(var_theor), df = df)
df <- 3
var_theor <- df/(df-2)
2*pt(q = -6*sqrt(var_theor), df = df)
df <- 3
var_theor <- df/(df-2)
var_theor
sqrt(var_theor)
df <- 3
df/(df-2)
var_theor <- df/(df-2)
2*pt(q = -6*sqrt(var_theor), df = df)
var_theor <- df/(df-2)
2*pt(q = -6*sqrt(var_theor), df = df)
df <- 4
var_theor <- df/(df-2)
2*pt(q = -6*sqrt(var_theor), df = df)
df <- 5
var_theor <- df/(df-2)
2*pt(q = -6*sqrt(var_theor), df = df)
df <- 3
var_theor <- df/(df-2)
2*pt(q = -6*sqrt(var_theor), df = df)
1/(2*pt(q = -6*sqrt(var_theor), df = df))
v <- 3
var_t <- v/(v-2)
var_t
pt(-6*sqrt(var_t), df = v)
2*pt(-6*sqrt(var_t), df = v)
1/(2*pt(-6*sqrt(var_t), df = v))
1/(2*pt(-1.96*sqrt(var_t), df = v)) #1 in 500
(2*pt(-1.96*sqrt(var_t), df = v)) #1 in 500
2*pnorm(-6)
1/(2*pnorm(-6))
1/(2*pt(-6*sqrt(var_t), df = v)) #1 in 500
v <- 10
var_t <- v/(v-2)
1/(2*pt(-6*sqrt(var_t), df = v)) #1 in 500
v <- 100
var_t <- v/(v-2)
1/(2*pt(-6*sqrt(var_t), df = v)) #1 in 500
1/(2*pnorm(-6))
v <- 1000
var_t <- v/(v-2)
1/(2*pt(-6*sqrt(var_t), df = v)) #1 in 500
1/(2*pt(-1.96*sqrt(var_t), df = v)) #1 in 500
(2*pt(-1.96*sqrt(var_t), df = v)) #about 95%
1/(2*pnorm(-6))
v <- 30
var_t <- v/(v-2)
1/(2*pnorm(-6))
1/(2*pt(-6*sqrt(var_t), df = v)) #1 in 500
(1/(2*pnorm(-6)))/(1/(2*pt(-6*sqrt(var_t), df = v)))
?median()
sample(1:6, replace = T, size = 4)
sum(a)-min(a)
a <- sample(1:6, replace = T, size = 4)
sum(a)-min(a)
roll <- function(x){
a <- sample(1:6, replace = T, size = 4)
return(sum(a)-min(a))
}
roll <- function(x){
a <- sample(1:6, replace = T, size = 4)
return(sum(a)-min(a))
}
roll()
roll <- function(){
a <- sample(1:6, replace = T, size = 4)
return(sum(a)-min(a))
}
roll()
d <- replicate(n = 6, expr = roll)
d
d <- replicate(n = 6, expr = roll())
d
roll_sum <- function(){
d <- replicate(n = 6, expr = roll())
return(sum(d))
}
roll_sum()
d_sim <- replicate(n = 10^4, expr = roll_sum())
hist(d_sim)
mean(d_sim)
mean(d_sim <= 66)
casey <- c(14,10,13,9,14,6)
casey
sum(casey)
kenny <- c(10, 13, 7, 8 ,9,11)
kenny
sum(kenny)
mean(d_sim <= 58)
d_sim <- replicate(n = 10^5, expr = roll_sum())
hist(d_sim)
mean(d_sim)
mean(d_sim <= 66)
sum(casey)
sum(kenny)
mean(d_sim <= 58)
library(tidyverse)
?sample_n()
p_hat <- 0.19
n <- 2505
p_hat*(1-p_hat)
p_hat*(1-p_hat)/2505
se <- sqrt(p_hat*(1-p_hat)/2505)
se
se <- 2*sqrt(p_hat*(1-p_hat)/2505)
se
0.5^2/n
2*sqrt(p_hat*(1-p_hat)/n)
0.5^2/n
sqrt(0.5^2/n)
2*sqrt(0.5^2/n)
p_hat <- 0.265
n <- 1317
2*sqrt(0.5^2/n)
1.96*sqrt(0.5^2/n)
n <- 1410
1.96*sqrt(0.5^2/n)
n <- 2520
1.96*sqrt(0.5^2/n)
p_hat <- 0.427
n <- 2520
sample_size <- 1007
0.5^2/sample_size
sqrt(0.5^2/sample_size)
error <- 1.96*sqrt(0.5^2/sample_size)
error
lambda <- 1
mu <- 1/lambda
sigma2 <- 1/(lambda^2)
lambda <- 1
mu <- 1/lambda
sigma2 <- 1/(lambda^2)
pexp()
?pexp()
pexp(q = mu - 6*sqrt(sigma2), rate = lambda)
mu - 6*sqrt(sigma2)
pexp(q = mu - 6*sqrt(sigma2), rate = lambda) + pexp(q = mu + 6*sqrt(sigma2), rate = lambda)
pexp(q = mu - 6*sqrt(sigma2), rate = lambda) + pexp(q = mu + 6*sqrt(sigma2), rate = lambda, lower.tail = F)
1/(pexp(q = mu - 6*sqrt(sigma2), rate = lambda) + pexp(q = mu + 6*sqrt(sigma2), rate = lambda, lower.tail = F))
2*pnorm(-6)
1/(2*pnorm(-6))
a <- 1/(pexp(q = mu - 6*sqrt(sigma2), rate = lambda) + pexp(q = mu + 6*sqrt(sigma2), rate = lambda, lower.tail = F))
b <- 1/(2*pnorm(-6))
b/a
b
a
a/b
b/a
setwd("C:/Users/Casey/Dropbox/API-209 - 2021/Problem Sets/PS 03/3 - to post - ps3")
library(tidyverse)
co <- read_csv("Peru Election 2020.csv")
xbar_5 <- c()
for (i in 1:1000) {
samp_5 <- slice_sample(co, n = 5)
xbar_5[i]<-100*((sum(samp_5$castillo)-sum(samp_5$fujimori)) / sum(samp_5$votes_cast))
}
xbar_5
hist(xbar_5)
str(co)
samp_5 <- slice_sample(co, n = 5)
xbar_5[i]<-100*((sum(samp_5$castillo)-sum(samp_5$fujimori)) / sum(samp_5$votes_cast))
xbar_5
hist(xbar_5)
mean(xbar_5)
mean(xbar_5, na.rm = T)
is.na(co)
is.na(co$castillo)
sum(is.na(co$castillo)|is.na(co$fujimori))
co %>% filter(is.na(castillo)|is.na(fujimori))
co %>% filter(is.na(castillo)|is.na(fujimori)) %>%
count()
for (i in 1:1000) {
samp_5 <- slice_sample(co, n = 5)
xbar_5[i]<-100*((sum(samp_5$castillo)-sum(samp_5$fujimori)) / sum(samp_5$votes_cast))
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(options(width = 60))
knitr::opts_chunk$set(class.output = "bg-warning")
packages <- c('haven','dplyr', 'ggplot2', 'reshape2', 'tidyverse', 'pracma',
'lubridate', 'scales', 'ggthemes', 'gt', 'dineq', 'gglorenz')
to_install <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(to_install)>0) install.packages(to_install,
repos='http://cran.us.r-project.org')
lapply(packages, require, character.only=TRUE)
# Insert only code here.
std_error <- 0.051
xbar_100 <- as.data.frame(xbar_100) %>%
mutate(x_lb = xbar_100 - 1.64*std_error) %>%
mutate(x_ub = xbar_100 + 1.64*std_error)
